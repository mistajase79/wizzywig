imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
#    - { resource: "@PrototypeAdminBundle/Resources/config/services.yml" }
#    - { resource: "@PrototypeUserBundle/Resources/config/services.yml" }
#    - { resource: "@PrototypeNewsBundle/Resources/config/services.yml" }
#    - { resource: "@PrototypeBlogBundle/Resources/config/services.yml" }
#    - { resource: "@PrototypeMenuBundle/Resources/config/services.yml" }
#    - { resource: "@PrototypeGeneratorBundle/Resources/config/services.yml" }

doctrine_cache:
    providers:
        arraycache:
            type: array
            namespace: arraycache

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    sitename: "ProtoCMS Demo"
    siteurl: "protocms-demo.dev"
    multilingual: true
    email_norely: "noreply@sym3cms.dev"

gregwar_image:
    fallback_image: /images/fallback.jpg
    cache_dir:  /userfiles/image_cache
    throw_exception: false
    web_dir: %kernel.root_dir%/../web/

gregwar_captcha:
    charset: 0123456789
    length: 5

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: "@theme/common/pagination.html.twig"     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    #fragments:       ~
    fragments: { path: /_fragment }
    http_method_override: true
    assets: ~
    translator:    { fallback: en }

# Twig Configuration
twig:
    form_themes: ['bootstrap_3_layout.html.twig','PrototypeAdminBundle:Form:fields.html.twig']
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    paths:
        "%kernel.root_dir%/../app/Resources/views/theme": theme
        "%kernel.root_dir%/../app/Resources/views/base": theme
    globals:
        sitename: "%sitename%"
        siteurl: "%siteurl%"
        multilingual: "%multilingual%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        #GEDMO
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true

        mappings:
              gedmo_translatable:
                  type: annotation
                  prefix: Gedmo\Translatable\Entity
                  dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                  alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                  is_bundle: false
              gedmo_translator:
                  type: annotation
                  prefix: Gedmo\Translator\Entity
                  dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                  alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                  is_bundle: false
              gedmo_loggable:
                  type: annotation
                  prefix: Gedmo\Loggable\Entity
                  dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                  alias: GedmoLoggable # (optional) it will default to the name set for the mappingmapping
                  is_bundle: false

stof_doctrine_extensions:
    default_locale: "en"
    translation_fallback: true
    persist_default_translation: false
    # Only used if you activated the Uploadable extension
    uploadable:
        # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
        default_file_path:       %kernel.root_dir%/../web/uploads
        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter
        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
    orm:
        default:
            tree: false
            timestampable: true
            blameable: true
            sluggable: true
            translatable: true
            loggable: true
            softdeleteable: true
            uploadable: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
