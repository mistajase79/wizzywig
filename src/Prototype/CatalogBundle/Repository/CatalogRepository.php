<?php

 namespace Prototype\CatalogBundle\Repository;

 use Doctrine\ORM\EntityRepository;

 /**
  * CatalogRepository
  *
  * This class was generated by the Doctrine ORM. Add your own custom
  * repository methods below.
  */
 class CatalogRepository extends EntityRepository
 {

 	public function findSlugWithLocale($locale = 'en', $slug)
    {
 	   //Make a Select query
 	   $qb = $this->createQueryBuilder('a');
 	   $qb->select('a');
 	   $qb->where('a.slug = :slug');
 	   $qb->setParameter('slug', $slug);

 	   // Use Translation Walker
 	   $query = $qb->getQuery();
 	   $query->setHint(
 		   \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
 		   'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
 	   );
 	   // Force the locale
 	   $query->setHint(
 		   \Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE,
 		   $locale
 	   );
 	   $query->getOneOrNullResult();

 	   $results = $query->getResult();
 	   if($results != null){ $results = $results[0];}
 	   return $results;
    }


 public function findActiveSlugWithLocale($locale = 'en', $slug)
 {
    $locales = array();
    $locales[] = 'en';
    $sql = 'SELECT * FROM locales WHERE active = 1';
    $localesArray =  $this->getEntityManager()->getConnection()->executeQuery($sql)->fetchAll();
    foreach($localesArray as $loc){
        $locales[] = $loc['locale'];
    }

    //Make a Select query
    $qb = $this->createQueryBuilder('a');
    $qb->select('a');
    $qb->where('a.slug = :slug');
    $qb->andWhere('a.active = 1');
    $qb->andWhere('a.deleted = 0');
    $qb->setParameter('slug', $slug);

    // Use Translation Walker
    $query = $qb->getQuery();
    $query->setHint(
        \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
        'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
    );
    // Force the locale
    $query->setHint(\Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE,$locale);

    //$query->setHint(\Gedmo\Translatable\TranslatableListener::HINT_FALLBACK, 1);
    //$query->getOneOrNullResult();
    $results = $query->getResult();
    //
    // $count=0;
    // while($results == null){
    //     //echo "<br/>looking at ".$locales[$count];
    //     $query->setHint(\Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE,$locales[$count]);
    //     $count++;
    //     $query->getOneOrNullResult();
    //     $results = $query->getResult();
    // }

    if($results != null){ $results = $results[0];}
    return $results;
 }



}
