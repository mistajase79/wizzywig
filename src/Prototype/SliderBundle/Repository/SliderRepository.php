<?php

 namespace Prototype\SliderBundle\Repository;

 use Doctrine\ORM\EntityRepository;

 /**
  * SliderRepository
  *
  * This class was generated by the Doctrine ORM. Add your own custom
  * repository methods below.
  */
 class SliderRepository extends EntityRepository
 {

 	public function findSlugWithLocale($locale = 'en', $slug)
    {
 	   //Make a Select query
 	   $qb = $this->createQueryBuilder('a');
 	   $qb->select('a');
 	   $qb->where('a.slug = :slug');
 	   $qb->setParameter('slug', $slug);

 	   // Use Translation Walker
 	   $query = $qb->getQuery();
 	   $query->setHint(
 		   \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
 		   'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
 	   );
 	   // Force the locale
 	   $query->setHint(
 		   \Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE,
 		   $locale
 	   );
 	   $query->getOneOrNullResult();

 	   $results = $query->getResult();
 	   if($results != null){ $results = $results[0];}
 	   return $results;
    }


    public function findAllWithActiveSlides(){

    	$qb = $this->getEntityManager()->createQueryBuilder();
		  
      $slider = $qb
      ->select('slider, sliderImages')
      ->from('PrototypeSliderBundle:Slider', 'slider')
      ->leftJoin('slider.images', 'sliderImages')
      ->where('sliderImages.deleted = 0')
      ->getQuery()
      ->getResult();

      return $slider;



    }

     public function findByPageId($pageId){

      $qb = $this->getEntityManager()->createQueryBuilder();
      
      $query = $qb
      ->select('slider', 'sliderImages')
      ->from('PrototypeSliderBundle:Slider', 'slider')
      ->join('slider.pages', 'p', 'WITH', $qb->expr()->in('p.id', $pageId))
      ->leftJoin('slider.images', 'sliderImages')
      ->where('sliderImages.deleted = 0')
      ->andWhere('sliderImages.active = 1')
      ->getQuery();

       $slider = $query->getOneOrNullResult();
      return $slider;



    }



 }
